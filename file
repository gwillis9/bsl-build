{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template creates a windows 2016 server from a the GOLD AMI for windows 2016 only. Instance types are limited to T, M, C, and R.",

  "Parameters" : {
    "KeyName" : {
      "Description" : "BSL-Customer-Builds",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be uploaded to the s3 bucket."
    },

    "InstanceType" : {
      "Description" : "Amazon EC2 instance type - BSL types limited for automated builds",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "Roles" : {
      "Description" : "Add Role leaving spaces between selections eg. AD-Domain-Services",
      "Type" : "String",
      "Default" : "None",
      "AllowedPattern" : "(((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS))( ((AD\\-Certificate)|(AD\\-Domain\\-Services)|(ADLDS)|(DHCP)|(DNS)|(Fax)|(File\\-Services)|(NPAS)|(Print\\-Services)|(Web\\-Server)|(WDS)))*)|(None)"
    },
    "Features" : {
      "Description" : "Add Features leaving spaces between selections eg. Failover-Clustering",
      "Type" : "String",
      "Default" : "None",
      "AllowedPattern" : "(((NET\\-Framework)|(Windows\\-Internal\\-DB)|(PowerShell\\-ISE)|(Failover\\-Clustering)|(RDC)|(RPC\\-over\\-HTTP\\-Proxy)|(Simple\\-TCPIP)|(Telnet\\-Client)|(Telnet\\-Server)|(WinRM\\-IIS\\-Ext)))|(None)"
    },
    "VpcId" : {
      "Type" : "AWS::EC2::VPC::Id",
      "Default" : "abc-123",
      "Description" : "VPC ID for BSL Prod VPC"
    },
    
    "AvailabilityZone" : {
        "Type" : "AWS::EC2::AvailabilityZone::Name",
        "Description" : "Choose Availability Zone for BSL deployment"
    },
    
    "SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup::Id",
      "Default" : "abc-123",
      "Description" : "Security Group to enable RDP from management zone"
    },

    "SubnetId" : {
      "Type" : "AWS::EC2::Subnet::Id",
      "Default" : "subnet-9f1eb1c6",
      "Description" : "SubnetId of an existing subnet in your VPC"
    }

  },

  "Mappings" : {
    "AWSRegion2AMI" : {
      

      "ap-southeast-2"   : {"Windows2016" : "ami-9afa1ef8"},

    }

  },

  "Resources" : {

       "WindowsServer": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "c:\\cfn\\cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]}
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init\n",
                  "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
                      " -r WindowsServer",
                      " --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}
              }
            },
            
            "commands" : {
              "1-install-roles" : {
                "command" : { "Fn::Join" : [ "", [
                  "if not \"None\" EQU \"",
                  { "Ref" : "Roles" },
                  "\" (servermanagercmd -install ",
                  { "Ref" : "Roles" },
                  " -restart)"]]
                }
              },
              "2-install-features" : {
                "command" : { "Fn::Join" : [ "", [
                  "if not \"None\" EQU \"",
                  { "Ref" : "Features" },
                  "\" (servermanagercmd -install ",
                  { "Ref" : "Features" },
                  " -restart)"]]
                }
              },
              "3-signal-success" : {
                "command" : { "Fn::Join" : [ "", [
                  "cfn-signal.exe -e %ERRORLEVEL% \"",
                  { "Fn::Base64" : { "Ref" : "WindowsServerWaitHandle" }},
                  "\""]]
                }
              }
            },
            
            "services" : {
              "windows" : {
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
                }
              }
            }
          }
        }
      },
      
      "Properties": {
        "InstanceType" : { "Ref" : "InstanceType" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, "Windows2016" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "SubnetId" : { "Ref" : "SubnetId" },
          "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "<script>\n",

            "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, 
            " -r WindowsServer",
            " --region ", { "Ref" : "AWS::Region" }, "\n",
          
            "</script>"
        ]]}}
      }
    },

        }
  },
  
  "Outputs" : {
    "RolesEnabled" : {
      "Value" : { "Ref" : "Roles" },
      "Description" : "Roles enabled on this instance."
    },
    "FeaturesEnabled" : {
      "Value" : { "Ref" : "Features" },
      "Description" : "Features enabled on this instance."
    }
  }  
}
